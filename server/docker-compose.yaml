name: mem0-prod

services:
  mem0:
    build:
      context: .
      dockerfile: server/dev.Dockerfile  # or replace with prod.Dockerfile if you have one
    ports:
      - "8000:8000"
    env_file:
      - .env
    networks:
      - mem0_network
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=1

  postgres:
    image: ankane/pgvector:v0.5.1
    restart: always
    shm_size: "128mb"
    networks:
      - mem0_network
    environment:
      - POSTGRES_DB=mem0
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "mem0", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_db:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  neo4j:
    image: neo4j:5.26.4
    networks:
      - mem0_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:7474"]
      interval: 5s
      timeout: 10s
      retries: 10
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/mem0graph
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true

volumes:
  neo4j_data:
  postgres_db:

networks:
  mem0_network:
    driver: bridge
